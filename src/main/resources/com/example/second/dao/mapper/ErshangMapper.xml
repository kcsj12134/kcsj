<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.second.dao.ErshangDao">
    <resultMap id="BaseResultMap" type="com.example.second.entity.Ershang">
        <id column="uid" property="uid" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="score" property="score" jdbcType="INTEGER"/>
        <result column="teacher" property="teacher" jdbcType="VARCHAR"/>
        <result column="intro" property="intro" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        uid, name, score, teacher,intro
    </sql>

    <select id="findAllErshangs" resultType="com.example.second.entity.Ershang">
        select * from ershang
    </select>

    <select id="findErshangByName" parameterType="java.lang.String" resultMap="BaseResultMap">
        select * from ershang where name = #{name,jdbcType=VARCHAR}
    </select>

    <delete id="deleteErshangsByIds">
        delete from ershang where uid in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

    <select id="getCountErshangs" resultType="java.lang.Integer">
        select count(uid) as count from ershang
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from ershang
        where uid = #{uid,jdbcType=BIGINT}
    </select>
    <delete id="deleteErshangById" parameterType="java.lang.Long">
        delete from ershang
        where uid = #{uid,jdbcType=BIGINT}
    </delete>

    <insert id="insert" parameterType="com.example.second.entity.Ershang">
        insert into ershang (uid, name, score,
                             teacher,intro)
        values (#{uid,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{score,jdbcType=INTEGER},
                #{teacher,jdbcType=VARCHAR},#{intro,jdbcType=VARCHAR})
    </insert>
    <insert id="addErshang" parameterType="com.example.second.entity.Ershang">
        insert into ershang
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                uid,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="score != null">
                score,
            </if>
            <if test="teacher != null">
                teacher,
            </if>
            <if test="intro != null">
                intro,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                #{uid,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="score != null">
                #{score,jdbcType=INTEGER},
            </if>
            <if test="teacher != null">
                #{teacher,jdbcType=VARCHAR},
            </if>
            <if test="intro != null">
                #{intro,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateErshang" parameterType="com.example.second.entity.Ershang">
        update ershang
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="score != null">
                score = #{score,jdbcType=INTEGER},
            </if>
            <if test="teacher != null">
                teacher = #{teacher,jdbcType=VARCHAR},
            </if>
            <if test="intro != null">
                intro = #{intro,jdbcType=VARCHAR},
            </if>
        </set>
        where uid = #{uid,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.second.entity.Ershang">
        update ershang
        set name = #{name,jdbcType=VARCHAR},
            score = #{score,jdbcType=INTEGER},
            teacher = #{teacher,jdbcType=VARCHAR},
            intro = #{intro,jdbcType=VARCHAR}
        where uid = #{uid,jdbcType=BIGINT}
    </update>
</mapper>